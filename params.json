{"name":"github-base","tagline":"Simple, opinionated node.js interface for creating basic apps with the GitHub API.","body":"# github-base [![NPM version](https://badge.fury.io/js/github-base.svg)](http://badge.fury.io/js/github-base)  [![Build Status](https://travis-ci.org/jonschlinkert/github-base.svg)](https://travis-ci.org/jonschlinkert/github-base)\r\n\r\n> Base methods for creating node.js apps that work with the GitHub API.\r\n\r\n<!-- toc -->\r\n\r\n* [Install](#install)\r\n* [Usage](#usage)\r\n* [Related](#related)\r\n* [API](#api)\r\n* [Running tests](#running-tests)\r\n* [Why another \"GitHub API\" lib?](#why-another--github-api--lib-)\r\n* [Contributing](#contributing)\r\n* [Author](#author)\r\n* [License](#license)\r\n\r\n_(Table of contents generated by [verb](https://github.com/verbose/verb))_\r\n\r\n<!-- tocstop -->\r\n\r\n**Heads up!**\r\n\r\nThis lib was completely refactored in `v0.2.0`. Please see the [API documentation](#API) for more details.\r\n\r\n**About**\r\n\r\nThis library provides the necessary methods for creating your own GitHub API library or more specific functionality built on top of these methods.\r\n\r\n* [.request](#request): the base handler all of the GitHub API VERBS: `GET`, `PUT`, `POST`, `DELETE`, `PATCH`\r\n* [.get](#get): proxy for `request('GET', path, data, cb)`\r\n* [.getAll](#getAll): makes repeat `.get()` requests until the page of data has been retrieved.\r\n* [.del](#del): proxy for `request('DEL', path, data, cb)`\r\n* [.patch](#patch): proxy for `request('PATCH', path, data, cb)`\r\n* [.post](#post): proxy for `request('POST', path, data, cb)`\r\n* [.put](#put): proxy for `request('PUT', path, data, cb)`\r\n\r\n## Install\r\n\r\nInstall with [npm](https://www.npmjs.com/)\r\n\r\n```sh\r\n$ npm i github-base --save\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar GitHub = require('github-base');\r\nvar github = new GitHub({\r\n  username: YOUR_USERNAME,\r\n  password: YOUR_PASSWORD,\r\n});\r\n\r\n// or \r\nvar github = new GitHub({\r\n  token: YOUR_TOKEN\r\n});\r\n```\r\n\r\n## Related\r\n\r\n* [gists](https://www.npmjs.com/package/gists): Methods for working with the GitHub Gist API. Node.js/JavaScript | [homepage](https://github.com/jonschlinkert/gists)\r\n* [github-config](https://www.npmjs.com/package/github-config): Easily store or get Github config data from `.gitconfig`. Useful when you want to store… [more](https://www.npmjs.com/package/github-config) | [homepage](https://github.com/tunnckocore/github-config)\r\n* [github-contributors](https://www.npmjs.com/package/github-contributors): Generate a markdown or JSON list of contributors for a project using the GitHub API. | [homepage](https://github.com/jonschlinkert/github-contributors)\r\n\r\n## API\r\n\r\n### [GitHub](index.js#L22)\r\n\r\nCreate an instance of `GitHub` with the given options.\r\n\r\n**Params**\r\n\r\n* `options` **{Object}**\r\n\r\n**Example**\r\n\r\n```js\r\nvar GitHub = require('github-base');\r\nvar github = new GitHub(options);\r\n```\r\n\r\n### [.request](index.js#L55)\r\n\r\nUses [simple-get](https://github.com/feross/simple-get) to make a single request to the GitHub API, based on the provided settings. Supports any of the GitHub API VERBs:\r\n\r\n* `GET`, `PUT`, `POST`, `DELETE`, `PATCH`\r\n\r\n**Params**\r\n\r\n* `method` **{String}**\r\n* `url` **{String}**: GitHub API URL to use.\r\n* `data` **{Options}**: Request options.\r\n* `cb` **{Function}**\r\n\r\n**Example**\r\n\r\n```js\r\ngithub.request('GET', '/user/orgs', function (err, res) {\r\n  //=> array of orgs\r\n});\r\n```\r\n\r\n### [.get](index.js#L88)\r\n\r\nMakes a single `GET` request to the GitHub API based on the\r\nprovided settings.\r\n\r\n**Params**\r\n\r\n* `path` **{String}**: path to append to the GitHub API URL.\r\n* `data` **{Options}**: Request options.\r\n* `cb` **{Function}**\r\n\r\n**Example**\r\n\r\n```js\r\n// get orgs for the authenticated user\r\ngithub.get('/user/orgs', function (err, res) {\r\n  //=> array of orgs\r\n});\r\n\r\n// get gists for the authenticated user\r\ngithub.get('/gists', function (err, res) {\r\n  //=> array of gists\r\n});\r\n```\r\n\r\n### [.getAll](index.js#L105)\r\n\r\nPerforms a request using [simple-get](https://github.com/feross/simple-get), and then if necessary\r\nrequests additional paged content based on the response. Data from\r\nall pages are concatenated together and buffered until the last\r\npage of data has been retrieved.\r\n\r\n**Params**\r\n\r\n* `path` **{String}**: path to append to the GitHub API URL.\r\n* `cb` **{Function}**\r\n\r\n**Example**\r\n\r\n```js\r\n// get all repos for the authenticated user\r\nvar url = '/user/repos?type=all&per_page=1000&sort=updated';\r\ngithub.getAll(url, function(err, res) {\r\n  console.log(res);\r\n});\r\n```\r\n\r\n### [.del](index.js#L129)\r\n\r\nMakes a single `DELETE` request to the GitHub API based on the\r\nprovided settings.\r\n\r\n**Params**\r\n\r\n* `path` **{String}**: path to append to the GitHub API URL.\r\n* `data` **{Options}**: Request options.\r\n* `cb` **{Function}**\r\n\r\n**Example**\r\n\r\n```js\r\n// un-follow someone\r\ngithub.del('/user/following/someoneelse', function(err, res) {\r\n  console.log(res);\r\n});\r\n```\r\n\r\n### [.patch](index.js#L145)\r\n\r\nMakes a single `PATCH` request to the GitHub API based on the\r\nprovided settings.\r\n\r\n**Params**\r\n\r\n* `path` **{String}**: path to append to the GitHub API URL.\r\n* `data` **{Options}**: Request options.\r\n* `cb` **{Function}**\r\n\r\n**Example**\r\n\r\n```js\r\n// update a gist\r\nvar fs = require('fs');\r\nvar opts = {files: {'readme.md': { content: '# My Readme...' }}};\r\ngithub.patch('/gists/bd139161a425896f35f8', opts, function(err, res) {\r\n  console.log(err, res);\r\n});\r\n```\r\n\r\n### [.post](index.js#L161)\r\n\r\nMakes a single `POST` request to the GitHub API based on the\r\nprovided settings.\r\n\r\n**Params**\r\n\r\n* `path` **{String}**: path to append to the GitHub API URL.\r\n* `data` **{Options}**: Request options.\r\n* `cb` **{Function}**\r\n\r\n**Example**\r\n\r\n```js\r\n// create a new repo\r\nvar opts = { name:  'new-repo-name' };\r\ngithub.post('/user/repos', opts, function(err, res) {\r\n  console.log(res);\r\n});\r\n```\r\n\r\n### [.put](index.js#L177)\r\n\r\nMakes a single `PUT` request to the GitHub API based on the\r\nprovided settings.\r\n\r\n**Params**\r\n\r\n* `path` **{String}**: path to append to the GitHub API URL.\r\n* `data` **{Options}**: Request options.\r\n* `cb` **{Function}**\r\n\r\n**Example**\r\n\r\n```js\r\n// follow someone\r\ngithub.put('/user/following/jonschlinkert', function(err, res) {\r\n  console.log(res);\r\n});\r\n```\r\n\r\n### [.extend](index.js#L206)\r\n\r\nConvenience method for inheriting `GitHub`. Extends\r\nprototype and static methods.\r\n\r\n**Params**\r\n\r\n* `Ctor` **{Object}**\r\n\r\n**Example**\r\n\r\n```js\r\nvar GitHub = require('github-base');\r\nfunction MyApp() {\r\n  GitHub.call(this);\r\n}\r\nGitHub.extend(MyApp);\r\n```\r\n\r\n## Running tests\r\n\r\nInstall dev dependencies:\r\n\r\n```sh\r\n$ npm i -d && npm test\r\n```\r\n\r\n## Why another \"GitHub API\" lib?\r\n\r\nEvery other GitHub API library I found either had a [huge dependency tree](https://github.com/sindresorhus/gh-got), tries to be [everything to everyone](https://github.com/michael/github/blob/master/package.json#L45-L56), was [too bloated with boilerplace code](https://github.com/mikedeboer/node-github/tree/master/templates), was too opinionated or not maintained.\r\n\r\n## Contributing\r\n\r\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/github-base/issues/new).\r\n\r\n## Author\r\n\r\n**Jon Schlinkert**\r\n\r\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\r\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\r\n\r\n## License\r\n\r\nCopyright © 2015 Jon Schlinkert\r\nReleased under the MIT license.\r\n\r\n***\r\n\r\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on September 14, 2015._\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}